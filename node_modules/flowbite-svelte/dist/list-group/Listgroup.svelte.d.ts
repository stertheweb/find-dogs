import { SvelteComponentTyped } from "svelte";
import type { ListGroupItemType } from '../types';
declare const __propDef: {
    props: import("svelte/elements").HTMLAnchorAttributes & {
        tag?: string;
        color?: import("../utils/Frame.svelte").FrameColor;
        rounded?: boolean;
        border?: boolean;
        shadow?: boolean;
        node?: HTMLElement | undefined;
        use?: import("svelte/action").Action<HTMLElement, any>;
        options?: object;
        class?: string;
        role?: string;
        open?: boolean;
        transition?: (node: HTMLElement, params: any) => import("svelte/transition").TransitionConfig;
        params?: any;
    } & {
        items?: ListGroupItemType[] | string[];
        active?: boolean;
    };
    events: {
        click: CustomEvent<any>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {
            item: string;
            index: number;
        };
    };
};
export type ListgroupProps = typeof __propDef.props;
export type ListgroupEvents = typeof __propDef.events;
export type ListgroupSlots = typeof __propDef.slots;
/**
 * [Go to docs](https://flowbite-svelte.com/)
 * ## Props
 * @prop export let items: ListGroupItemType[] | string[] = [];
 * @prop export let active: boolean = false;
 * @prop export let defaultClass: string = 'divide-y divide-gray-200 dark:divide-gray-600';
 */
export default class Listgroup extends SvelteComponentTyped<ListgroupProps, ListgroupEvents, ListgroupSlots> {
}
export {};
